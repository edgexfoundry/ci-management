---
- import_playbook: ../common-packer/provision/docker.yaml

- hosts: all
  become_user: root
  become_method: sudo
  vars:
    docker_compose_version: 1.17.1
    glide_version: v0.13.1
    golang_version: 1.9.1
    golang110_version: '1.10'
    golang111_version: '1.11.2'
    golang_url: https://storage.googleapis.com/golang/go{{golang_version}}.linux-amd64.tar.gz
    golang110_url: https://storage.googleapis.com/golang/go{{golang110_version}}.linux-amd64.tar.gz
    golang111_url: https://storage.googleapis.com/golang/go{{golang111_version}}.linux-amd64.tar.gz
    glide_url: https://github.com/Masterminds/glide/releases/download/{{glide_version}}/glide-{{glide_version}}-linux-amd64.tar.gz

  tasks:
    - name: Set golang download url
      set_fact:
        golang_url: https://storage.googleapis.com/golang/go{{golang_version}}.linux-arm64.tar.gz
      when: "'aarch64' in ansible_architecture"

    - name: Set glide download url
      set_fact:
        glide_url: https://github.com/Masterminds/glide/releases/download/{{glide_version}}/glide-{{glide_version}}-linux-arm64.tar.gz
      when: "'aarch64' in ansible_architecture"

    - name: 'Install Docker Compose'
      apt:
        name:
          - docker-compose-plugin
        state: present
      when: ansible_distribution == 'Ubuntu'
      become: true

    - name: 'Install GoLang {{golang_version}}'
      block:
        - name: 'Fetch golang {{golang_version}} to /tmp/go{{golang_version}}.tar.gz'
          get_url:
            url: '{{golang_url}}'
            dest: '/tmp/go{{golang_version}}.tar.gz'
        - name: 'Install golang {{golang_version}} to /usr/local'
          unarchive:
            src: '/tmp/go{{golang_version}}.tar.gz'
            dest: /usr/local
            remote_src: true
          become: true
        - name: 'Add golang to PATH'
          command: 'echo "export PATH=$PATH:/usr/local/go/bin" >> /etc/profile'
          become: true

    - name: 'Install GoLang 1.10'
      block:
        - name: 'Fetch golang {{golang110_version}} to /tmp/go{{golang110_version}}.tar.gz'
          get_url:
            url: '{{golang110_url}}'
            dest: '/tmp/go{{golang110_version}}.tar.gz'
        - name: 'Install golang {{golang110_version}} to /opt/golang/110/bin/go'
          unarchive:
            src: '/tmp/go{{golang110_version}}.tar.gz'
            dest: '/opt'
            creates: '/opt/golang/110'
            remote_src: true
          become: true

    - name: 'Install GoLang 1.11'
      block:
        - name: 'Fetch golang {{golang111_version}} to /tmp/go{{golang111_version}}.tar.gz'
          get_url:
            url: '{{golang111_url}}'
            dest: '/tmp/go{{golang111_version}}.tar.gz'
        - name: 'Install golang {{golang111_version}} to /opt/golang/111/bin/go'
          unarchive:
            src: '/tmp/go{{golang111_version}}.tar.gz'
            dest: '/opt'
            creates: '/opt/golang/111'
            remote_src: true
          become: true

    - name: 'Install Glide {{glide_version}}'
      block:
        - name: 'Fetch Glide {{glide_version}} to /tmp/glide-{{glide_version}}.tar.gz'
          get_url:
            url: '{{glide_url}}'
            dest: '/tmp/glide-{{glide_version}}.tar.gz'
        - name: 'Unarchive Glide'
          unarchive:
            src: '/tmp/glide-{{glide_version}}.tar.gz'
            dest: /tmp
            extra_opts: [--strip-components=1]
            remote_src: true
        - name: 'Install Glide to /usr/local/bin/glide'
          copy:
            src: /tmp/glide
            dest: /usr/local/bin/glide
            owner: root
            group: root
            mode: 0755
            remote_src: true
          become: true

    - name: 'Install zeromq via yum'
      yum:
        name:
          - zeromq
          - zeromq-devel
        state: present
      when: ansible_os_family == 'RedHat'
      become: true

    - name: 'Install zeromq via apt'
      apt:
        name:
          - libzmq5
          - libzmq3-dev
        state: present
      when: ansible_distribution == 'Ubuntu'
      become: true

    - name: 'Install cmake via yum'
      yum:
        name:
          - cmake
        state: present
      when: ansible_os_family == 'RedHat'
      become: true

    - name: 'Install cmake via apt'
      apt:
        name:
          - cmake
        state: present
      when: ansible_distribution == 'Ubuntu'
      become: true

    - name: 'Set docker proxy'
      lineinfile:
        dest: /etc/docker/daemon.json
        line: '  "registry-mirrors": ["https://nexus3.edgexfoundry.org:10001"],'
        state: present
        insertafter: '{'
      become: true
